#!/usr/bin/env perl

package CloudFlareTunnel;

use strict;
use warnings;
use FindBin '$Bin';

$| = 1;

my $working_dir = "$Bin/..";
my $tunnel_dir  = "$working_dir/tunnel";

my @docker_args = (
    docker => 'run',
    -u     => 'root',
    -it    => '--rm',
    -v     => "$tunnel_dir:/root/.cloudflared",
    'cloudflare/cloudflared:latest'
);

my $config_template = do { local $/; <DATA> };

my $uuid = qr/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}/;

chdir $working_dir;

mkdir $tunnel_dir if !-d $tunnel_dir;

sub list_tunnels {
    my @files = split /\n/, qx{find $tunnel_dir -type f -name *.json}
        or return ();

    my @list;

    foreach my $file(@files) {
        if ($file =~ m/($uuid)/) {
            push @list, $1;
        }
    }

    return @list;
}

sub login {
    system @docker_args, tunnel => 'login';
}

sub create_web_tunnel {
    system @docker_args, tunnel => qw(create Web);
}

sub get_input {
    my $input = <STDIN>;
    chomp $input;
    return $input;
}

sub create_config {
    my ($config) = @_;
    open my $fh, '>', "$working_dir/tunnel/config.yml";
    print $fh $config;
}

sub enable_tunnel_feature {
    system qw(mvu docker --enable cloudflare-tunnel);
}

sub call_tunnel {
    system @docker_args, tunnel => @_;
}

sub route_tunnel {
    print "Domain Name? ";
    my $domain = get_input;
    system @docker_args, qw(tunnel route dns Web), $domain;
}

sub register {
    my @list = list_tunnels;

    my $select;

    if ( !@list ) {
        login;
        create_web_tunnel;
        die "!! Run again to continue.\n";
    }
    elsif ( @list == 1 ) {
        $select = $list[0];
    }
    elsif ( @list > 1 ) {
        print "There is more than one tunnels. Which one?\n";
        printf "%s\n\n>> ", join "\n", @list;
        $select = get_input;
        die "Invalid selection.\n"
          if !$select
          || $select !~ m/$uuid/
          || !grep { $select eq $_ } @list;
    }

    my $config = $config_template;

    $config =~ s/\<UUID\>/$select/g;

    create_config $config;

    enable_tunnel_feature;

    route_tunnel;

    print "Done! Now you can run [mvu docker up -d tunnel]\n";
}

sub main {
    my ( $cmd, @args ) = @_;

    if ( $cmd eq 'register' ) {
        register;
    }
    else {
        call_tunnel $cmd => @args;
    }
}

caller or main(@ARGV);

__DATA__
tunnel: <UUID>
url: http://web:80
credentials-file: /etc/cloudflared/<UUID>.json
protocol: quic
warp-routing:
   enabled: true
logfile: /var/log/cloudflared.log
loglevel: debug
transport-loglevel: info

